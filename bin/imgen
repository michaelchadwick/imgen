#!/usr/bin/env ruby

require 'optparse'

require_relative '../lib/imgen'
require_relative '../lib/imgen/version'

BINARY_NAME = $PROGRAM_NAME.split('/').last

def parse_options
  options = {:width => 100, :height => 100, :display => false}

  optparse = OptionParser.new do |opts|
    opts.banner = 'usage: imgen [-w, --width WIDTH] [-h, --height HEIGHT] [--display]'

    opts.on('-w', '--width WIDTH_OF_IMAGE', 'Width of image to create') do |w|
      options[:width] = w
    end

    opts.on('-h', '--height HEIGHT_OF_IMAGE', 'Height of image to create') do |h|
      options[:height] = h
    end

    opts.on('-d', '--directory IMG_DIRECTORY', 'Subdirectory to put generated images') do |d|
      options[:directory] = d
    end

    opts.on('--display', 'Display image using X11 after creation') do |bg|
      options[:display] = true
    end

    opts.on('-v', '--version', 'Display version number and exit') do
      puts "#{BINARY_NAME} #{Imgen::VERSION}"
      exit
    end

    opts.on('--help', 'Display this screen and exit') do
      puts opts
      exit
    end
  end

  options[:usage] = optparse.to_s
  optparse.parse!()

  return options
end

def print_error(error)
  case error
  when OptionParser::InvalidOption
    puts "#{BINARY_NAME}: illegal option #{error.args.join(' ')}"
  else
    puts "An unexpected error occurred while running #{BINARY_NAME}:"
    puts "  #{error}\n"
  end
end

begin
  options = parse_options

  Imgen::Image.new(options)
rescue => error
  print_error(error)
  exit(false)
end
